generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Level {
  HIGHEST
  BASIC
}

enum Status {
  HADIR
  IZIN
  SAKIT
  ALPHA
}

model Major {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  acronym String   @unique
  class   String[]
  group   String[]

  @@index([name])
}

model Class {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  acronym String   @unique
  majorId Int
  group   String[]
}

// Kelompok per kelas
model Group {
  id      Int    @id @default(autoincrement())
  name    String @unique
  acronym String @unique
  majorId Int
  classId Int
}

model Student {
  id         Int     @id @default(autoincrement())
  fullName   String  @unique
  placement  String
  nis        String  @unique
  absenceId  Int
  deviceId   String?
  deviceName String?

  presence   Presence? @relation(fields: [presenceId], references: [id])
  presenceId Int?

  @@index([fullName, nis])
}

model Administrator {
  id          Int      @id @default(autoincrement())
  fullName    String   @unique
  nip         String   @unique
  level       Level    @default(BASIC)
  access      String[]
  phoneNumber String

  @@index([fullName, nip])
}

model Presence {
  id     Int      @id @default(autoincrement())
  isOpen Boolean  @default(false)
  openAt DateTime @default(now())

  student Student[]
}
