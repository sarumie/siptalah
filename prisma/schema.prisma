generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Level {
  ADMIN
  STAFF
}

enum Status {
  HADIR
  IZIN
  SAKIT
  ALPHA
}

model Presence {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isOpen    Boolean  @default(false)

  student Student[]
}

model Student {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  fullName   String
  nis        String   @unique
  deviceId   String?
  deviceName String?

  major    Major      @relation(fields: [majorId], references: [id])
  majorId  String
  presence Presence[]

  @@index([fullName, nis])
}

model Major {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique
  acronym   String   @unique

  class   Class     @relation(fields: [classId], references: [id])
  classId String
  group   Group     @relation(fields: [groupId], references: [id])
  groupId String
  student Student[]
  admin   Admin[]
}

model Class {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique

  major Major[]
}

model Group {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique

  Major Major[]
}

model Admin {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  fullName    String
  nip         String   @unique
  level       Level    @default(STAFF)
  access      Major[]
  phoneNumber String

  @@index([fullName, nip])
}
